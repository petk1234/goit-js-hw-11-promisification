{"version":3,"sources":["task-3.js"],"names":["randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","delay","Promise","resolve","reject","setTimeout","canProcess","keys","id","console","log","logSuccess","logError","warn","amount","then","catch"],"mappings":";AAAA,MAAMA,EAA4B,CAACC,EAAKC,IAC7BC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,GAGhDK,EAAmBC,IACnBC,IAAAA,EAAQR,EAA0B,IAAK,KACpC,OAAA,IAAIS,QAAS,CAACC,EAASC,KAC1BC,WAAW,KAGLC,GAFeV,KAAKE,SAAW,GAEnB,CACRS,MAAAA,EAAO,CAACP,EAAYQ,GAAIP,GAC9BE,EAAQI,GACRE,QAAQC,IAAIT,QAEZG,EAAOJ,EAAYQ,KAEpBP,MAIHU,EAAcJ,IAClBE,QAAQC,mBAAmBH,EAAK,mBAAmBA,EAAK,SAGpDK,EAAWJ,IACfC,QAAQI,qCAAqCL,+BAa/CT,EAAgB,CAAES,GAAI,GAAIM,OAAQ,MAC/BC,KAAKJ,GACLK,MAAMJ,GAETb,EAAgB,CAAES,GAAI,GAAIM,OAAQ,MAC/BC,KAAKJ,GACLK,MAAMJ,GAETb,EAAgB,CAAES,GAAI,GAAIM,OAAQ,KAC/BC,KAAKJ,GACLK,MAAMJ,GAETb,EAAgB,CAAES,GAAI,GAAIM,OAAQ,MAC/BC,KAAKJ,GACLK,MAAMJ","file":"task-3.f8cd3a42.js","sourceRoot":"..\\src","sourcesContent":["const randomIntegerFromInterval = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  };\r\n  \r\n  const makeTransaction = (transaction) => {\r\n    let delay = randomIntegerFromInterval(200, 500);\r\n    return new Promise( (resolve, reject) => {\r\n        setTimeout(() => {\r\n          const canProcess = Math.random() > 0.3;\r\n  \r\n          if (canProcess) {\r\n            const keys = [transaction.id, delay]\r\n            resolve(keys);\r\n            console.log(delay);\r\n          } else {\r\n            reject(transaction.id);\r\n          } \r\n        }, delay);\r\n    });\r\n  }\r\n  \r\n  const logSuccess = (keys) => {\r\n    console.log(`Transaction ${keys[0]} processed in ${keys[1]}ms`);\r\n  };\r\n  \r\n  const logError = id => {\r\n    console.warn(`Error processing transaction ${id}. Please try again later.`);\r\n  };\r\n  \r\n  /*\r\n   * Работает так\r\n   */\r\n  //makeTransaction({ id: 70, amount: 150 }, logSuccess, logError);\r\n  //makeTransaction({ id: 71, amount: 230 }, logSuccess, logError);\r\n  //makeTransaction({ id: 72, amount: 75 }, logSuccess, logError);\r\n  //makeTransaction({ id: 73, amount: 100 }, logSuccess, logError);\r\n  /*\r\n   * Должно работать так\r\n   */\r\n  makeTransaction({ id: 70, amount: 150 })\r\n    .then(logSuccess)\r\n    .catch(logError);\r\n  \r\n  makeTransaction({ id: 71, amount: 230 })\r\n    .then(logSuccess)\r\n    .catch(logError);\r\n  \r\n  makeTransaction({ id: 72, amount: 75 })\r\n    .then(logSuccess)\r\n    .catch(logError);\r\n  \r\n  makeTransaction({ id: 73, amount: 100 })\r\n    .then(logSuccess)\r\n    .catch(logError);"]}